<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation=" 
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    	http://www.springframework.org/schema/context 
    	http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	
	<bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>
	
	<context:component-scan base-package="lv.lu.meetings.impl"/>
	
	<!-- User profile importing -->
	<bean id="usersProcessor" class="lv.lu.meetings.impl.users.UsersDataImportProcessor">		
		<property name="cleanDatabase" value="true"/>
	</bean>
	
	<bean id="usersDataProvider" class="lv.lu.meetings.impl.users.UsersDataProvider">
		<property name="usersFilePath" value="src\main\resources\data\users.xml"/>
	</bean>
	
	<!-- Venues data importing -->
	<bean id="venuesProcessor" class="lv.lu.meetings.impl.venues.VenueDataImportProcessor">
		<property name="cleanDatabase" value="true"/>
		<!-- Max number of venues to retrieve in one request ('limit' parameter for Foursquare API request) -->
		<property name="count" value="10"/>
		<property name="request">
			<map>
				<entry>
					<!-- 'near' parameter for Foursquare API request -->
					<key><value>Riga, LV</value></key>
					<!-- list of categories ('section' parameter for Foursquare API request) for retrieving venues -->
					<list>
						<value>food</value>
						<value>coffee</value>
						<value>outdoors</value>
					</list>
				</entry>
			</map>
		</property>
	</bean>
	               
    <!-- Database connection properties are specified in \lab01-meetings\src\main\resources\META-INF\persistence.xml file -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="hibernate_mysql"/>
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
		</property>
	</bean>
	
	<bean id="transactionManager"
		class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"/>
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<!-- Redis data storage configuration -->
	
	<bean id="redisDAO" class="lv.lu.meetings.impl.redis.RedisDAOImpl">
		<property name="template" ref="redisTemplate"/>
		<property name="maxFriendsCount" value="500"/>		
	</bean>
	
	<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
		p:host-name="localhost" p:port="6379" p:password=""/>

	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate" 
		p:connection-factory-ref="jedisConnectionFactory">
		<property name="keySerializer" ref="stringKeySerializer"/>
	</bean>
	
	<bean id="stringKeySerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
	
</beans>